TSynTatraDASSyn   {first Identifier is considered to be the Class Name }
tk              {second Identifier is considered to be the Identifier Prefix }
Sensitive 
IdentStart '_', '0'..'9', 'a'..'z', 'A'..'Z':: '_', '0'..'9', 'a'..'z', 'A'..'Z'::

TOKENTYPES
Identifier
Comment Style=[fsItalic]|Foreground=clNavy
Space
String Style=[fsBold]|Foreground=clRed
Key Style=[fsBold]
Test Background=clSilver|Foreground=clBlue|Style=[fsUnderline, fsItalic]
KlucSlova Style=[fsbold]|Foreground=clblue
EntryPoint Style=[fsbold]|Foreground=clPurple
Instructions Style=[fsbold]|Foreground=clBlack
Calls Style=[fsbold]|Foreground=$00CC00
Jumps Style=[fsbold]|Foreground=$00CC00
Loops Style=[fsbold]|Foreground=$00CC00
Returns Style=[fsbold]|Foreground=$FF66FF
|><|

KEYS
Hello
World

|><|
KEYS Instructions
     AAA AAD AAM AAS ADC ADD ADDPD ADDPS ADDSD ADDSS AND ANDPD ANDPS ANDNPD ANDNPS ARPL
     BOUND BSF BSR BSWAP BT BTC BTR BTS

     CBW CDQ CLC CLD CLFLUSH CLI CLTS CMC CMOVXX
     CMOVO CMOVNO CMOVB CMOVAE CMOVE CMOVNE CMOVBE CMOVA CMOVS CMOVNS CMOVP CMOVNP CMOVL CMOVNL CMOVLE CMOVNLE
     CMP CMPPD CMPPS CMPS CMPSB CMPSD CMPSW CMPSD CMPSS CMPXCHG CMPXCHG8B COMISD COMISS CPUID
     CVTDQ2PD CVTDQ2PS CVTPD2DQ CVTPD2PI CVTPD2PS CVTPI2PD CVTPI2PS CVTPS2DQ CVTPS2PD CVTPS2PI CVTSD2SI CVTSD2SS CVTSI2SD CVTSI2SS CVTSS2SD CVTSS2SI CVTTPD2PI CVTTPD2DQ CVTTPS2DQ CVTTPS2PI CVTTSD2SI CVTTSS2SI
     CWD CWDE

     DAA DAS DEC DIV DIVPD DIVPS DIVSD DIVSS
     EMMS ENTER

     F2XM1 FABS FADD FADDP FIADD FBLD FBSTP FCHS FCLEX FNCLEX
     FCMOVB FCMOVBE FCMOVE FCMOVNB FCMOVNBE FCMOVNE FCMOVNU FCMOVU
     FCOM FCOMI FCOMIP FCOMP FCOMPP FCOS FDECSTP FDIV FDIVP FDIVR FDIVRP FFREE FIADD FICOM FICOMP FIDIV FIDIVR FILD FIMUL FINCSTP
     FINIT FIST FISTP FISTTP FISUB FISUBR FLD FLD1 FLDCW FLDENV FLDL2E FLDL2T FLDLG2
     FLDLN2 FLDPI FLDZ FMUL FMULP FNCLEX FNINIT FNOP FNSAVE FNSTCW FNSTENV
     FNSTSW FPATAN FPREM FPREM1 FPTAN FRNDINT FRSTOR FSAVE FSCALE FSIN FSINCOS
     FSQRT FST FSTCW FSTENV FSTP FSTSW FSUB FSUBP FSUBR FSUBRP FTST
     FUCOM FUCOMI FUCOMIP FUCOMP FUCOMPP FWAIT FXAM FXCH FXRSTOR FXSAVE FXTRACT FYL2X FYL2XP1

     HLT
     IDIV IMUL IN INC INS INSB INSD INSW INT INTO INVD INVLPG
     LAHF LAR LDMXCSR LDS LEA LEAVE LES LFENCE LFS LGDT LGS LIDT LLDT LMSW LOCK LODS LODSB LODSD LODSW LSL LSS LTR

     MASKMOVDQU MASKMOVQ MAXPD MAXPS MAXSD MAXSS MFENCE MINPD MINPS MINSD MINSS
     MOV MOVAPD MOVAPS MOVD MOVDQA MOVDQU MOVDQ2Q MOVHLPS MOVHPD MOVHPS MOVLHPS MOVLPD MOVLPS MOVMSKPD MOVMSKPS MOVNTDQ MOVNTI MOVNTPD MOVNTPS MOVNTQ
     MOVQ MOVQ2DQ MOVS MOVSB MOVSD MOVSW MOVSS MOVSX MOVUPD MOVUPS MOVZX MUL MULPD MULPS MULSD MULSS

     NEG NOP NOT
     OR ORPD ORPS OUT OUTS OUTSB OUTSD OUTSW

     PACKSSDW PACKSSWB PACKUSWB PADDB PADDD PADDQ PADDSB PADDSW PADDUSB PADDUSW
     PADDW PAND PANDN PAUSE PAVGB PAVGW PCMPEQB PCMPEQD PCMPEQW PCMPGTB PCMPGTD PCMPGTW PEXTRW
     PINSRW  PMADDWD PWAXSW PMAXUB PMINWS PMINUB PMOVMSKB
     PMULHUW PMULHW PMULLW PMULUDQ PUSHAW PUSHFW
     POP POPA POPAD POPF POPFD POR PREFETCHT0 PREFETCHT1 PREFETCHT2 PREFETCHNTA
     PSADBW PSHUFD PSHUFHW PSHUFLW PSHUFW
     PSLLDQ PSLLD PSLLQ PSLLW PSRAD PSRAW PSRLDQ PSRLD PSRLQ PSRLW
     PSUBQ PSUBB PSUBD PSUBSB PSUBSW PSUBUSB PSUBUSW PSUBW
     PUNPCKHBW PUNPCKHDQ PUNPCKHWD PUNPCKHQDQ
     PUNPCKLBW PUNPCKLDQ PUNPCKLWD PUNPCKLQDQ
     PUSH PUSHA PUSHAD  PUSHF PUSHFD PXOR

     RCL RCR RCPPS RCPSS RDMSR RDPMC RDTSC ROL ROR RSM RSQRTPS RSQRTSS

     SAHF SAL SAR SBB SCAS SCASB SCASD SCASW
     SETA SETAE SETB SETBE SETC SETE SETG SETGE SETL SETLE SETNA SETNAE SETNB SETNBE SETNC SETNE SETNG SETNGE SETNL SETNLE SETNO SETNP SETNS SETNZ SETO SETP SETPO SETS SETZ
     SGDT SHL SHLD SHR SHRD SHUFPD SHUFPS SIDT SLDT SMSW SQRTPD SQRTPS SQRTSD SQRTSS STC STD STI STMXCSR STOS STOSB STOSD STOSW STR SUB SUBPD SUBPS SUBSD SUBSS SYSENTER SYSEXIT

     TEST
     UCOMISD UCOMISS UD2 UNPCKHPD UNPCKHPS UNPCKLPD UNPCKPLS
     VERR VERW
     WAIT WBINVD WRMSR
     XADD XCHG XLAT XLATB XOR XORPD XORPS

     lock rep repe repne repnz repz

     PF2ID PFACC PFADD PFCMPEQ PFCMPGE PFCMPGT PFMAX PFMIN PFMUL PFRCP
     PFRCPIT1 PFRCPIT2 PFRSQIT1 PFRSQRT PFSUB PFSUBR PI2FD POPAW POPFW
     FEMMS
|><|

KEYS KlucSlova
Imported
Exported
function
module
from
used
Jump
Call
Loop
|><|

KEYS EntryPoint
Program
Entry
point
|><|

KEYS Test
SynEdit
|><|

KEYS Calls
CALL
|><|

KEYS Jumps
JA JAE JB JBE JC JCXZ JE JECXZ JG JGE JL JLE JMP JNA JNAE JNB JNBE JNC
JNE JNG JNGE JNL JNLE JNO JNP JNS JNZ JO JP JPE JPO JS JZ JMPN JMPF
|><|

KEYS Loops
LOOP LOOPE LOOPZ LOOPNE LOOPNZ
|><|

KEYS Returns
RET RETN RETF IRET IRETD IRETW
|><|

CHARS

'0'..'9', 'A'..'Z', 'a'..'z', '_':: Ident
BeginProc
  fTokenID := IdentKind((fLine + Run));
  inc(Run, fStringLen);
  while Identifiers[fLine[Run]] do
    Inc(Run);
EndProc

|><|

ENCLOSEDBY
Comment,PascalComment,{,},Multiline
Comment,AsmComment,;,WhatDoIHaveToWriteHereToMakeItSingleLineComment,Singleline
String,String,','

|><|

SAMPLESOURCE
{ Sample source for the demo highlighter }

This highlighter will recognize the words Hello and
World as keywords. It will also highlight "Strings".

And a special keyword type: SynEdit

/* This style of comments is also highlighted */
|><|

